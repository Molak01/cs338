Devin Lewis | CS 338


			_______Diffie-Hellman_______


g = 11 and p = 59

Alice sent Bob 57, which means A = 57 = 11^a mod 59
Bob sent Alice 44, so B = 44 = 11^b mod 59

With these two numbers we can create a small python program to find the values of both a and b.
--------------
x = 1

while 11**x % 59 != 57:
    x = x + 1
    
print(x)
--------------
From this we get that a = 36

Then use the same method, but replace 57 with 44.

b = 15

Now using A and B, we can calculate the secret both Alice and Bob got, which should both be the same number.

The Secret for Alice: K = B^a mod P --> 44^36 mod 59
	K = 36

The Secret for Bob: K = A^b mod P --> 57^15 mod 59
	K = 36

This works for numbers that aren't especially large, but if they were then it would've been difficult for me to implement them into a python program and maybe even impossible to do so with their size.


			_______RSA_______


Bob's public key:
(e_Bob(eB), n_Bob(nB)) = (13, 5561)

In order to compute Alice's message we need to use the equation Y = X^eB mod nB, where Y is each integer in Alice's coded message and X is the ASCII code we're looking for. You see, each number in the encoded message is the Y from that equation, and we want the X since that can be translated into ASCII

Now, similar to how we did it back for the Diffie-Hellman part, we can use the same python formula to find X for each integer. We can then also create a list of all of each X value instead of doing each individually ourselves.
--------------
list = [(A list of all the integers in Alice's message)]

x = 1

ans = []

for i in list:
	while x**13 % 5561 != i:
    		x = x + 1
	ans.append(x)
	x = 1
    
print(ans)
--------------

Now with this list of all the converted integers, we can go to a free ASCII converter to decode Alice's message!

Alice's message: "Hey Bob. It's even worse than we thought! Your pal, Alice. https://www.schneier.com/blog/archives/2022/04/airtags-are-used-for-stalking-far-more-than-previously-reported.html"


This process worked, but if the public keys Bob had were extremely large numbers it would have become difficult to nearly impossible to calculate even with python, since python does have a number size limit. However the encoding that Alice used would have been insecure even if the integers were larger because with enough patience the method to create that pattern would always be the same AND it soleley relies on Bob's key rather than a piece of her own information. Basically, since Bob was already compromised and Alice didn't use her own numbers to further encode the data, it would have been cracked eventually.

